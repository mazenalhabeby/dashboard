{"ast":null,"code":"import _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport { isServer } from '@iso/lib/helpers/isServer';\nconst productDatas = [];\n\nfunction getInitData() {\n  let productQuantity = [];\n  const products = {};\n\n  if (!isServer) {\n    const cartProductQuantity = localStorage.getItem('cartProductQuantity');\n    let cartProducts = localStorage.getItem('cartProducts');\n\n    if (cartProducts && cartProductQuantity) {\n      cartProducts = JSON.parse(cartProducts);\n      JSON.parse(cartProductQuantity).forEach(product => {\n        const objectID = product.objectID;\n\n        if (!isNaN(product.quantity)) {\n          productQuantity.push({\n            objectID,\n            quantity: _parseInt(product.quantity, 10)\n          });\n          products[objectID] = _objectSpread({}, cartProducts[objectID], {\n            price: _parseFloat(cartProducts[objectID].price, 10)\n          });\n        }\n      });\n    } else {\n      productDatas.forEach(product => {\n        productQuantity.push({\n          objectID: product.objectID,\n          quantity: 1\n        });\n        products[product.objectID] = product;\n      });\n    }\n  }\n\n  return {\n    productQuantity,\n    products\n  };\n}\n\nexport default getInitData();","map":{"version":3,"sources":["C:/Users/Bill/Desktop/isoadmin-330/isoadmin-330/Isomorphic - React Redux Admin Dashboard/isomorphic/node_modules/@iso/redux/ecommerce/config.js"],"names":["isServer","productDatas","getInitData","productQuantity","products","cartProductQuantity","localStorage","getItem","cartProducts","JSON","parse","forEach","product","objectID","isNaN","quantity","push","price"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,2BAAzB;AAEA,MAAMC,YAAY,GAAG,EAArB;;AACA,SAASC,WAAT,GAAuB;AACrB,MAAIC,eAAe,GAAG,EAAtB;AACA,QAAMC,QAAQ,GAAG,EAAjB;;AACA,MAAI,CAACJ,QAAL,EAAe;AACb,UAAMK,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAA5B;AACA,QAAIC,YAAY,GAAGF,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAnB;;AACA,QAAIC,YAAY,IAAIH,mBAApB,EAAyC;AACvCG,MAAAA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWF,YAAX,CAAf;AACAC,MAAAA,IAAI,CAACC,KAAL,CAAWL,mBAAX,EAAgCM,OAAhC,CAAwCC,OAAO,IAAI;AACjD,cAAMC,QAAQ,GAAGD,OAAO,CAACC,QAAzB;;AACA,YAAI,CAACC,KAAK,CAACF,OAAO,CAACG,QAAT,CAAV,EAA8B;AAC5BZ,UAAAA,eAAe,CAACa,IAAhB,CAAqB;AACnBH,YAAAA,QADmB;AAEnBE,YAAAA,QAAQ,EAAE,UAASH,OAAO,CAACG,QAAjB,EAA2B,EAA3B;AAFS,WAArB;AAIAX,UAAAA,QAAQ,CAACS,QAAD,CAAR,qBACKL,YAAY,CAACK,QAAD,CADjB;AAEEI,YAAAA,KAAK,EAAE,YAAWT,YAAY,CAACK,QAAD,CAAZ,CAAuBI,KAAlC,EAAyC,EAAzC;AAFT;AAID;AACF,OAZD;AAaD,KAfD,MAeO;AACLhB,MAAAA,YAAY,CAACU,OAAb,CAAqBC,OAAO,IAAI;AAC9BT,QAAAA,eAAe,CAACa,IAAhB,CAAqB;AACnBH,UAAAA,QAAQ,EAAED,OAAO,CAACC,QADC;AAEnBE,UAAAA,QAAQ,EAAE;AAFS,SAArB;AAIAX,QAAAA,QAAQ,CAACQ,OAAO,CAACC,QAAT,CAAR,GAA6BD,OAA7B;AACD,OAND;AAOD;AACF;;AACD,SAAO;AAAET,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAAP;AACD;;AAED,eAAeF,WAAW,EAA1B","sourcesContent":["import { isServer } from '@iso/lib/helpers/isServer';\n\nconst productDatas = [];\nfunction getInitData() {\n  let productQuantity = [];\n  const products = {};\n  if (!isServer) {\n    const cartProductQuantity = localStorage.getItem('cartProductQuantity');\n    let cartProducts = localStorage.getItem('cartProducts');\n    if (cartProducts && cartProductQuantity) {\n      cartProducts = JSON.parse(cartProducts);\n      JSON.parse(cartProductQuantity).forEach(product => {\n        const objectID = product.objectID;\n        if (!isNaN(product.quantity)) {\n          productQuantity.push({\n            objectID,\n            quantity: parseInt(product.quantity, 10),\n          });\n          products[objectID] = {\n            ...cartProducts[objectID],\n            price: parseFloat(cartProducts[objectID].price, 10),\n          };\n        }\n      });\n    } else {\n      productDatas.forEach(product => {\n        productQuantity.push({\n          objectID: product.objectID,\n          quantity: 1,\n        });\n        products[product.objectID] = product;\n      });\n    }\n  }\n  return { productQuantity, products };\n}\n\nexport default getInitData();\n"]},"metadata":{},"sourceType":"module"}