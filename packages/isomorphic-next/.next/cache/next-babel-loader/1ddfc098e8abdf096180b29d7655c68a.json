{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bill\\\\Desktop\\\\isoadmin-330\\\\isoadmin-330\\\\Isomorphic - React Redux Admin Dashboard\\\\isomorphic\\\\packages\\\\isomorphic-next\\\\authentication\\\\auth.utils.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nexport const setCookie = (key, value) => {\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1,\n      path: '/'\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (process.browser) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\nexport const getCookie = (key, req) => {\n  return process.browser ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\n};\n\nconst getCookieFromBrowser = key => {\n  return cookie.get(key);\n};\n\nconst getCookieFromServer = (key, req) => {\n  if (!req.headers.cookie) {\n    return undefined;\n  }\n\n  const rawCookie = req.headers.cookie.split(';').find(c => c.trim().startsWith(`${key}=`));\n\n  if (!rawCookie) {\n    return undefined;\n  }\n\n  return rawCookie.split('=')[1];\n};\n\nexport const login = ({\n  token\n}) => {\n  cookie.set('token', token, {\n    expires: 1\n  });\n  Router.push('/dashboard');\n};\nexport const auth = ctx => {\n  const {\n    token\n  } = nextCookie(ctx);\n  /*\n   * If `ctx.req` is available it means we are on the server.\n   * Additionally if there's no token it means the user is not logged in.\n   */\n\n  if (ctx.req && !token) {\n    ctx.res.writeHead(302, {\n      Location: '/signin'\n    });\n    ctx.res.end();\n  } // We already checked for server. This should only happen on client.\n\n\n  if (!token) {\n    Router.push('/signin');\n  }\n\n  return token;\n};\nexport const logout = () => {\n  cookie.remove('token'); // to support logging out from all windows\n\n  window.localStorage.setItem('logout', _Date$now());\n  Router.push('/signin');\n};\nexport const withAuthSync = WrappedComponent => {\n  const Wrapper = props => {\n    const syncLogout = event => {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!');\n        Router.push('/signin');\n      }\n    };\n\n    useEffect(() => {\n      window.addEventListener('storage', syncLogout);\n      return () => {\n        window.removeEventListener('storage', syncLogout);\n        window.localStorage.removeItem('logout');\n      };\n    }, [null]);\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  };\n\n  Wrapper.getInitialProps = async ctx => {\n    const token = auth(ctx);\n    const componentProps = WrappedComponent.getInitialProps && (await WrappedComponent.getInitialProps(ctx));\n    return _objectSpread({}, componentProps, {\n      token\n    });\n  };\n\n  return Wrapper;\n};","map":{"version":3,"sources":["C:/Users/Bill/Desktop/isoadmin-330/isoadmin-330/Isomorphic - React Redux Admin Dashboard/isomorphic/packages/isomorphic-next/authentication/auth.utils.js"],"names":["useEffect","Router","nextCookie","cookie","setCookie","key","value","process","browser","set","expires","path","removeCookie","remove","getCookie","req","getCookieFromBrowser","getCookieFromServer","get","headers","undefined","rawCookie","split","find","c","trim","startsWith","login","token","push","auth","ctx","res","writeHead","Location","end","logout","window","localStorage","setItem","withAuthSync","WrappedComponent","Wrapper","props","syncLogout","event","console","log","addEventListener","removeEventListener","removeItem","getInitialProps","componentProps"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nexport const setCookie = (key, value) => {\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1,\n      path: '/',\n    });\n  }\n};\n\nexport const removeCookie = key => {\n  if (process.browser) {\n    cookie.remove(key, {\n      expires: 1,\n    });\n  }\n};\n\nexport const getCookie = (key, req) => {\n  return process.browser\n    ? getCookieFromBrowser(key)\n    : getCookieFromServer(key, req);\n};\n\nconst getCookieFromBrowser = key => {\n  return cookie.get(key);\n};\n\nconst getCookieFromServer = (key, req) => {\n  if (!req.headers.cookie) {\n    return undefined;\n  }\n  const rawCookie = req.headers.cookie\n    .split(';')\n    .find(c => c.trim().startsWith(`${key}=`));\n  if (!rawCookie) {\n    return undefined;\n  }\n  return rawCookie.split('=')[1];\n};\n\nexport const login = ({ token }) => {\n  cookie.set('token', token, { expires: 1 });\n  Router.push('/dashboard');\n};\n\nexport const auth = ctx => {\n  const { token } = nextCookie(ctx);\n\n  /*\n   * If `ctx.req` is available it means we are on the server.\n   * Additionally if there's no token it means the user is not logged in.\n   */\n  if (ctx.req && !token) {\n    ctx.res.writeHead(302, { Location: '/signin' });\n    ctx.res.end();\n  }\n\n  // We already checked for server. This should only happen on client.\n  if (!token) {\n    Router.push('/signin');\n  }\n\n  return token;\n};\n\nexport const logout = () => {\n  cookie.remove('token');\n  // to support logging out from all windows\n  window.localStorage.setItem('logout', Date.now());\n  Router.push('/signin');\n};\n\nexport const withAuthSync = WrappedComponent => {\n  const Wrapper = props => {\n    const syncLogout = event => {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!');\n        Router.push('/signin');\n      }\n    };\n\n    useEffect(() => {\n      window.addEventListener('storage', syncLogout);\n\n      return () => {\n        window.removeEventListener('storage', syncLogout);\n        window.localStorage.removeItem('logout');\n      };\n    }, [null]);\n\n    return <WrappedComponent {...props} />;\n  };\n\n  Wrapper.getInitialProps = async ctx => {\n    const token = auth(ctx);\n\n    const componentProps =\n      WrappedComponent.getInitialProps &&\n      (await WrappedComponent.getInitialProps(ctx));\n\n    return { ...componentProps, token };\n  };\n\n  return Wrapper;\n};\n"]},"metadata":{},"sourceType":"module"}