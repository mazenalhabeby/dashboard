{"ast":null,"code":"import \"antd/lib/config-provider/style/css\";\nimport _ConfigProvider from \"antd/lib/config-provider\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bill\\\\Desktop\\\\isoadmin-330\\\\isoadmin-330\\\\Isomorphic - React Redux Admin Dashboard\\\\isomorphic\\\\packages\\\\isomorphic-next\\\\containers\\\\ThemeProvider.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport themes from '@iso/config/theme/theme.config';\nimport AppLocale from '@iso/config/translation';\nimport useWindowSize from '@iso/lib/hooks/useWindowSize';\nimport appActions from '@iso/redux/app/actions';\nvar toggleAll = appActions.toggleAll;\nexport default function AppProvider(_ref) {\n  var children = _ref.children;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.LanguageSwitcher.language;\n  }),\n      locale = _useSelector.locale;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.ThemeSwitcher.changeThemes;\n  }),\n      themeName = _useSelector2.themeName;\n\n  var currentAppLocale = AppLocale[locale];\n\n  var _useWindowSize = useWindowSize(),\n      width = _useWindowSize.width,\n      height = _useWindowSize.height;\n\n  React.useEffect(function () {\n    dispatch(toggleAll(width, height));\n  }, [dispatch]);\n  return __jsx(_ConfigProvider, {\n    locale: currentAppLocale.antd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(ThemeProvider, {\n    theme: themes[themeName],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, children)));\n}","map":{"version":3,"sources":["C:/Users/Bill/Desktop/isoadmin-330/isoadmin-330/Isomorphic - React Redux Admin Dashboard/isomorphic/packages/isomorphic-next/containers/ThemeProvider.js"],"names":["React","IntlProvider","useSelector","useDispatch","ThemeProvider","themes","AppLocale","useWindowSize","appActions","toggleAll","AppProvider","children","dispatch","state","LanguageSwitcher","language","locale","ThemeSwitcher","changeThemes","themeName","currentAppLocale","width","height","useEffect","antd","messages"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;IAEQC,S,GAAcD,U,CAAdC,S;AACR,eAAe,SAASC,WAAT,OAAmC;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAChD,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AADgD,qBAE7BD,WAAW,CAAC,UAAAW,KAAK;AAAA,WAAIA,KAAK,CAACC,gBAAN,CAAuBC,QAA3B;AAAA,GAAN,CAFkB;AAAA,MAExCC,MAFwC,gBAExCA,MAFwC;;AAAA,sBAG1Bd,WAAW,CAAC,UAAAW,KAAK;AAAA,WAAIA,KAAK,CAACI,aAAN,CAAoBC,YAAxB;AAAA,GAAN,CAHe;AAAA,MAGxCC,SAHwC,iBAGxCA,SAHwC;;AAIhD,MAAMC,gBAAgB,GAAGd,SAAS,CAACU,MAAD,CAAlC;;AAJgD,uBAKtBT,aAAa,EALS;AAAA,MAKxCc,KALwC,kBAKxCA,KALwC;AAAA,MAKjCC,MALiC,kBAKjCA,MALiC;;AAOhDtB,EAAAA,KAAK,CAACuB,SAAN,CAAgB,YAAM;AACpBX,IAAAA,QAAQ,CAACH,SAAS,CAACY,KAAD,EAAQC,MAAR,CAAV,CAAR;AACD,GAFD,EAEG,CAACV,QAAD,CAFH;AAGA,SACE;AAAgB,IAAA,MAAM,EAAEQ,gBAAgB,CAACI,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,MAAM,EAAEJ,gBAAgB,CAACJ,MAD3B;AAEE,IAAA,QAAQ,EAAEI,gBAAgB,CAACK,QAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEpB,MAAM,CAACc,SAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CR,QAA1C,CAJF,CADF,CADF;AAUD","sourcesContent":["import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport themes from '@iso/config/theme/theme.config';\nimport AppLocale from '@iso/config/translation';\nimport useWindowSize from '@iso/lib/hooks/useWindowSize';\nimport appActions from '@iso/redux/app/actions';\n\nconst { toggleAll } = appActions;\nexport default function AppProvider({ children }) {\n  const dispatch = useDispatch();\n  const { locale } = useSelector(state => state.LanguageSwitcher.language);\n  const { themeName } = useSelector(state => state.ThemeSwitcher.changeThemes);\n  const currentAppLocale = AppLocale[locale];\n  const { width, height } = useWindowSize();\n\n  React.useEffect(() => {\n    dispatch(toggleAll(width, height));\n  }, [dispatch]);\n  return (\n    <ConfigProvider locale={currentAppLocale.antd}>\n      <IntlProvider\n        locale={currentAppLocale.locale}\n        messages={currentAppLocale.messages}\n      >\n        <ThemeProvider theme={themes[themeName]}>{children}</ThemeProvider>\n      </IntlProvider>\n    </ConfigProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}