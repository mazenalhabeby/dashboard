{"version":3,"sources":["../../../shared/isomorphic/containers/Chat/DesktopView.js"],"names":["toggleCompose","chatActions","setComposedId","toggleViewProfile","chatInit","DesktopView","className","dispatch","useDispatch","useSelector","state","Chat","loading","users","userId","openCompose","selectedChatRoom","viewProfile","React","useEffect","ChatRooms","style","height","Modal","visible","onCancel","title","footer","InputName","id","ComposeMessage","autosize","minRows","maxRows","showButton","rows","onClick","otherUserInfo","name","Messages","ViewProfile","user"],"mappings":"+PAAA,wC,IAkBEA,EAIEC,IAJFD,cACAE,EAGED,IAHFC,cACAC,EAEEF,IAFFE,kBACAC,EACEH,IADFG,SAEa,SAASC,EAAT,GAAqC,IAAdC,EAAa,EAAbA,UAC9BC,EAAWC,cADgC,EAS7CC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAN7BC,EAH+C,EAG/CA,QACAC,EAJ+C,EAI/CA,MACAC,EAL+C,EAK/CA,OACAC,EAN+C,EAM/CA,YACAC,EAP+C,EAO/CA,iBACAC,EAR+C,EAQ/CA,YASF,OAPAC,IAAMC,WAAU,WACTN,GACHN,EAASH,EAASU,MAGnB,CAACA,IAEAF,EACK,kBAAC,IAAD,MAGP,kBAAC,IAAD,CAAYN,UAAU,cACpB,kBAACc,EAAA,EAAD,MACA,kBAAC,IAAD,CAASC,MAAO,CAAEC,OAAQ,SACxB,kBAACC,EAAA,EAAD,CACEC,QAAST,EACTU,SAAU,kBAAMlB,EAASP,MACzB0B,MAAM,kBACNC,OAAQ,MAER,kBAAC,IAAD,KACE,0DACA,kBAACC,EAAA,EAAD,CACEf,MAAOA,EACPX,cAAe,SAAA2B,GAAE,OAAItB,EAASL,EAAc2B,KAC5CvB,UAAWA,IAEb,kBAACwB,EAAA,EAAD,CACEC,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCC,YAAU,EACVC,KAAM,MAIXnB,GACC,kBAAC,IAAD,KACE,0BACEoB,QAAS,kBACP7B,EAASJ,EAAkBa,EAAiBqB,kBAG7CrB,EAAiBqB,cAAcC,OAItC,kBAACC,EAAA,EAAD,MAEA,kBAACT,EAAA,EAAD,CAAgBC,SAAU,CAAEC,QAAS,EAAGC,QAAS,OAElC,IAAhBhB,EACC,kBAACuB,EAAA,EAAD,CACEC,KAAMzB,EAAiBqB,cACvBlC,kBAAmB,kBAAMI,EAASJ,MAClCc,YAAaA,IAEb","file":"static/js/156.944e3a6b.chunk.js","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChatRooms from './ChatRooms';\nimport Messages from './Messages';\nimport ComposeMessage from './ComposeMessage';\nimport ViewProfile from '@iso/components/Chat/ViewProfile';\nimport InputName from '@iso/components/Chat/InputName';\nimport Loader from '@iso/components/utility/loader';\nimport Modal from '@iso/components/Feedback/Modal';\nimport {\n  ChatWindow,\n  ChatBox,\n  ToggleViewProfile,\n  MessageDialog,\n} from './Messages.styles';\nimport { resetDemoData } from './DemoDataImporter';\nimport chatActions from '@iso/redux/chat/actions';\nconst {\n  toggleCompose,\n  setComposedId,\n  toggleViewProfile,\n  chatInit,\n} = chatActions;\nexport default function DesktopView({ className }) {\n  const dispatch = useDispatch();\n  const {\n    loading,\n    users,\n    userId,\n    openCompose,\n    selectedChatRoom,\n    viewProfile,\n  } = useSelector(state => state.Chat);\n  React.useEffect(() => {\n    if (!users) {\n      dispatch(chatInit(userId));\n    }\n    // resetDemoData();\n  }, [userId]);\n\n  if (loading) {\n    return <Loader />;\n  }\n  return (\n    <ChatWindow className=\"ChatWindow\">\n      <ChatRooms />\n      <ChatBox style={{ height: '100%' }}>\n        <Modal\n          visible={openCompose}\n          onCancel={() => dispatch(toggleCompose())}\n          title=\"Compose Message\"\n          footer={null}\n        >\n          <MessageDialog>\n            <h5>Starting your chat with...</h5>\n            <InputName\n              users={users}\n              setComposedId={id => dispatch(setComposedId(id))}\n              className={className}\n            />\n            <ComposeMessage\n              autosize={{ minRows: 5, maxRows: 9 }}\n              showButton\n              rows={8}\n            />\n          </MessageDialog>\n        </Modal>\n        {selectedChatRoom && (\n          <ToggleViewProfile>\n            <span\n              onClick={() =>\n                dispatch(toggleViewProfile(selectedChatRoom.otherUserInfo))\n              }\n            >\n              {selectedChatRoom.otherUserInfo.name}\n            </span>\n          </ToggleViewProfile>\n        )}\n        <Messages />\n\n        <ComposeMessage autosize={{ minRows: 2, maxRows: 6 }} />\n      </ChatBox>\n      {viewProfile !== false ? (\n        <ViewProfile\n          user={selectedChatRoom.otherUserInfo}\n          toggleViewProfile={() => dispatch(toggleViewProfile())}\n          viewProfile={viewProfile}\n        />\n      ) : null}\n    </ChatWindow>\n  );\n}\n"],"sourceRoot":""}