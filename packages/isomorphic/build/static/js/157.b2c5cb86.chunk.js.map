{"version":3,"sources":["../../../shared/isomorphic/containers/Chat/MobileView.js"],"names":["toggleCompose","chatActions","setComposedId","toggleViewProfile","chatInit","mobileActiveList","mobileActiveProfile","toggleMobileList","toggleMobileProfile","MobileView","className","dispatch","useDispatch","useSelector","state","Chat","loading","users","userId","openCompose","selectedChatRoom","viewProfile","React","useEffect","CurrentView","visible","onCancel","title","footer","autosize","minRows","maxRows","showButton","rows","onClick","otherUserInfo","name","InputProps","disableUnderline"],"mappings":"6GAAA,gKAmBEA,EAQEC,IARFD,cACAE,EAOED,IAPFC,cACAC,EAMEF,IANFE,kBACAC,EAKEH,IALFG,SACAC,EAIEJ,IAJFI,iBACAC,EAGEL,IAHFK,oBACAC,EAEEN,IAFFM,iBACAC,EACEP,IADFO,oBAEa,SAASC,EAAT,GAAoC,IAAdC,EAAa,EAAbA,UAC7BC,EAAWC,cAD+B,EAS5CC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAN7BC,EAH8C,EAG9CA,QACAC,EAJ8C,EAI9CA,MACAC,EAL8C,EAK9CA,OACAC,EAN8C,EAM9CA,YACAC,EAP8C,EAO9CA,iBACAC,EAR8C,EAQ9CA,YAQF,GANAC,IAAMC,WAAU,WACTN,GACHN,EAASP,EAASc,OAIlBF,EACF,OAAO,kBAAC,IAAD,MAET,IAAIQ,EAAc,kBAAC,IAAD,MA+DlB,OA7DEA,EADEnB,EAEA,6BACE,kBAAC,IAAD,CACEoB,QAASN,EACTO,SAAU,kBAAMf,EAASX,MACzB2B,MAAM,kBACNC,OAAQ,MAER,kBAAC,IAAD,KACE,0DACA,kBAAC,IAAD,CACEX,MAAOA,EACPf,cAAe,kBAAMS,EAAST,MAC9BQ,UAAWA,IAEb,kBAAC,IAAD,CACEmB,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCC,YAAU,EACVC,KAAM,MAIZ,kBAAC,IAAD,CAAW1B,iBAAkB,kBAAMI,EAASJ,SAGvCD,EAEP,kBAAC,IAAD,CACEe,YAAaA,EACblB,kBAAmB,kBAAMQ,EAASR,MAClCK,oBAAqB,kBAAMG,EAASH,QAKtC,kBAAC,IAAD,CAASE,UAAU,WAChBU,GACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQc,QAAS,kBAAMvB,EAASJ,GAAiB,MAC/C,uBAAGG,UAAU,sBAEf,0BACEwB,QAAS,WACPvB,EAASR,EAAkBiB,EAAiBe,gBAC5CxB,EAASH,GAAoB,MAG9BY,EAAiBe,cAAcC,OAKtC,kBAAC,IAAD,CAAU5B,oBAAqB,kBAAMG,EAASH,QAC9C,kBAAC,IAAD,CACE6B,WAAY,CACVC,kBAAkB,MAMrB,kBAAC,IAAD,CAAY5B,UAAU,cAAcc","file":"static/js/157.b2c5cb86.chunk.js","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '@iso/components/Feedback/Modal';\nimport InputName from '@iso/components/Chat/InputName';\nimport ChatRooms from './ChatRooms';\nimport Messages from './Messages';\nimport ComposeMessage from './ComposeMessage';\nimport ViewProfile from '@iso/components/Chat/ViewProfile';\nimport Loader from '@iso/components/utility/loader';\nimport {\n  ChatWindow,\n  ChatBox,\n  Button,\n  MessageDialog,\n  ToggleViewProfile,\n} from './Messages.styles';\n\nimport chatActions from '@iso/redux/chat/actions';\nconst {\n  toggleCompose,\n  setComposedId,\n  toggleViewProfile,\n  chatInit,\n  mobileActiveList,\n  mobileActiveProfile,\n  toggleMobileList,\n  toggleMobileProfile,\n} = chatActions;\nexport default function MobileView({ className }) {\n  const dispatch = useDispatch();\n  const {\n    loading,\n    users,\n    userId,\n    openCompose,\n    selectedChatRoom,\n    viewProfile,\n  } = useSelector(state => state.Chat);\n  React.useEffect(() => {\n    if (!users) {\n      dispatch(chatInit(userId));\n    }\n  });\n\n  if (loading) {\n    return <Loader />;\n  }\n  let CurrentView = <Loader />;\n  if (mobileActiveList) {\n    CurrentView = (\n      <div>\n        <Modal\n          visible={openCompose}\n          onCancel={() => dispatch(toggleCompose())}\n          title=\"Compose Message\"\n          footer={null}\n        >\n          <MessageDialog>\n            <h5>Starting your chat with...</h5>\n            <InputName\n              users={users}\n              setComposedId={() => dispatch(setComposedId())}\n              className={className}\n            />\n            <ComposeMessage\n              autosize={{ minRows: 5, maxRows: 9 }}\n              showButton\n              rows={8}\n            />\n          </MessageDialog>\n        </Modal>\n        <ChatRooms toggleMobileList={() => dispatch(toggleMobileList())} />\n      </div>\n    );\n  } else if (mobileActiveProfile) {\n    CurrentView = (\n      <ViewProfile\n        viewProfile={viewProfile}\n        toggleViewProfile={() => dispatch(toggleViewProfile())}\n        toggleMobileProfile={() => dispatch(toggleMobileProfile())}\n      />\n    );\n  } else {\n    CurrentView = (\n      <ChatBox className=\"ChatBox\">\n        {selectedChatRoom && (\n          <ToggleViewProfile>\n            <Button onClick={() => dispatch(toggleMobileList(true))}>\n              <i className=\"ion-chevron-left\" />\n            </Button>\n            <span\n              onClick={() => {\n                dispatch(toggleViewProfile(selectedChatRoom.otherUserInfo));\n                dispatch(toggleMobileProfile(true));\n              }}\n            >\n              {selectedChatRoom.otherUserInfo.name}\n            </span>\n          </ToggleViewProfile>\n        )}\n\n        <Messages toggleMobileProfile={() => dispatch(toggleMobileProfile())} />\n        <ComposeMessage\n          InputProps={{\n            disableUnderline: true,\n          }}\n        />\n      </ChatBox>\n    );\n  }\n  return <ChatWindow className=\"ChatWindow\">{CurrentView}</ChatWindow>;\n}\n"],"sourceRoot":""}